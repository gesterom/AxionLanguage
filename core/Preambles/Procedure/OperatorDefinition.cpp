#include "Preambles/Procedure/OperatorDefinition.h"
std::vector<std::pair<std::string, ProcedureTokenType>> lexerOperators = {
{",",ProcedureTokenType::comma},
//{"?",},
{".",ProcedureTokenType::dot}, // namespaces
{"--",ProcedureTokenType::operator_t},
{"++",ProcedureTokenType::operator_t},
{"+",ProcedureTokenType::operator_t},
{"-",ProcedureTokenType::operator_t},
{"not",ProcedureTokenType::operator_t},
{"!",ProcedureTokenType::operator_t},
{ "~",ProcedureTokenType::operator_t},
{"bnot" ,ProcedureTokenType::operator_t},
{ "**" ,ProcedureTokenType::operator_t},
{"*",ProcedureTokenType::operator_t}, // val mul val ,Type pointer
{"/",ProcedureTokenType::operator_t},
{"div",ProcedureTokenType::operator_t},
{"+",ProcedureTokenType::operator_t},
{"-",ProcedureTokenType::operator_t},
{"<<",ProcedureTokenType::operator_t},
{"shl",ProcedureTokenType::operator_t},
{">>",ProcedureTokenType::operator_t},
{"shr",ProcedureTokenType::operator_t},
{">>>",ProcedureTokenType::operator_t},
{"<=>",ProcedureTokenType::operator_t},
{"<",ProcedureTokenType::operator_t},
{">",ProcedureTokenType::operator_t},
{"<=",ProcedureTokenType::operator_t},
{">=",ProcedureTokenType::operator_t},
{"==",ProcedureTokenType::operator_t},
{"!=",ProcedureTokenType::operator_t},
{"&",ProcedureTokenType::operator_t}, // val (&)band val, Type (&)reference
{"band",ProcedureTokenType::operator_t},
{"^",ProcedureTokenType::operator_t},
{"bxor",ProcedureTokenType::operator_t},
{"|",ProcedureTokenType::operator_t}, // val (|)bor val, Type |(SumType) Type
{"bor",ProcedureTokenType::operator_t},
{"&&",ProcedureTokenType::operator_t},
{"and",ProcedureTokenType::operator_t},
{"=",ProcedureTokenType::operator_t},
{"+=",ProcedureTokenType::operator_t},
{"-=",ProcedureTokenType::operator_t},
{"*=",ProcedureTokenType::operator_t},
{"/=",ProcedureTokenType::operator_t},
{ "%=" ,ProcedureTokenType::operator_t},
{"<<=",ProcedureTokenType::operator_t},
{">>=",ProcedureTokenType::operator_t},
{"&=",ProcedureTokenType::operator_t},
{"|=",ProcedureTokenType::operator_t},
{"^=",ProcedureTokenType::operator_t},
{"**=",ProcedureTokenType::operator_t},
};